{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\component\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useInsertionEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Context, useWebSocket } from \"../Connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ChatPage(props) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    sendMessage,\n    sendRegister,\n    Sub,\n    setReceived,\n    messageQueue\n  } = useContext(Context);\n  const [msg, setMsg] = useState(\"\");\n  const sendHandle = () => {\n    sendMessage(msg, id);\n    setMsg(\"\");\n  };\n  useEffect(() => {\n    console.log(\"메세징\");\n    if (messageQueue) {\n      messageQueue[\"id\"].forEach(element => {\n        console.log(element);\n      });\n    }\n  }, [messageQueue]);\n  useEffect(() => {\n    sendRegister(id);\n    //Sub(id);\n    setReceived(id);\n    console.log(id + \"로 이동함\");\n  }, [id]);\n  const activeEnter = e => {\n    if (e.key === \"Enter\") {\n      sendHandle();\n    }\n  };\n  const handleMsgInput = event => {\n    setMsg(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Channel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"OutputChat\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"This is a Sample. a \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"This is a Sample. a \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [id, \" is channel number;\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"InputChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: msg,\n        onChange: handleMsgInput,\n        onKeyDown: e => activeEnter(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendHandle,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 120\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatPage, \"zpgmD/tRSaKrsgEtXNlAvsS3iEE=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["useContext","useEffect","useInsertionEffect","useState","useParams","Context","useWebSocket","jsxDEV","_jsxDEV","ChatPage","props","_s","id","sendMessage","sendRegister","Sub","setReceived","messageQueue","msg","setMsg","sendHandle","console","log","forEach","element","activeEnter","e","key","handleMsgInput","event","target","value","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/scoop/scoop_front/src/component/ChatPage.jsx"],"sourcesContent":["import { useContext, useEffect, useInsertionEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { Context, useWebSocket } from \"../Connector\";\r\n\r\n\r\nexport function ChatPage(props){\r\n    const {id} = useParams();\r\n    const {sendMessage,sendRegister,Sub,setReceived,messageQueue} = useContext(Context);\r\n\r\n    const [msg, setMsg] = useState(\"\");\r\n    const sendHandle = () => {\r\n        sendMessage(msg, id);\r\n        setMsg(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"메세징\");\r\n        if(messageQueue){\r\n        messageQueue[\"id\"].forEach(element => {\r\n            console.log(element);\r\n        });\r\n    }\r\n    },[messageQueue]);\r\n    useEffect(() => {\r\n        sendRegister(id);\r\n        //Sub(id);\r\n        setReceived(id);\r\n        console.log(id + \"로 이동함\");\r\n    },[id]);\r\n\r\n\r\n    const activeEnter = (e) => {\r\n        if(e.key === \"Enter\"){\r\n            sendHandle();\r\n        }\r\n    }\r\n    const handleMsgInput = (event) => {\r\n        setMsg(event.target.value);\r\n    }\r\n    return(\r\n        <div class=\"Channel\">\r\n        <div class=\"OutputChat\">\r\n            <ul>\r\n                <li>This is a Sample. a </li>\r\n                <li>This is a Sample. a </li>\r\n                <li>{id} is channel number;</li>\r\n            </ul>\r\n         </div>\r\n         <div class=\"InputChat\">\r\n            <input value={msg} onChange={handleMsgInput}         onKeyDown={(e) => activeEnter(e)}           ></input> <button onClick={sendHandle}>SEND</button>\r\n         </div> \r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}