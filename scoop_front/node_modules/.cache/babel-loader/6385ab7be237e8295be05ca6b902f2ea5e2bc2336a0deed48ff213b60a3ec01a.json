{"ast":null,"code":"import getSubFromLoginToken from \"./getSubFromLoginToken\"; // ✅ 올바른 import\n\nconst addFriend = userId => {\n  const sub = getSubFromLoginToken();\n  if (!sub) {\n    alert(\"로그인 정보가 없습니다.\");\n    return;\n  }\n  const REST = process.env.REACT_APP_RESTURL;\n  const url = `https://${REST}/api/addfriend`;\n  fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      sub,\n      friendCode: userId\n    })\n  }).then(res => {\n    if (!res.ok) {\n      throw new Error(`서버 응답 에러: ${res.status}`);\n    }\n    return res.json();\n  }).then(data => {\n    alert(data.message || \"친구 추가 성공!\");\n  }).catch(err => {\n    console.error(\"❌ 요청 오류:\", err);\n    alert(err.message || \"오류가 발생했습니다.\");\n  });\n};\nexport default addfriend;","map":{"version":3,"names":["getSubFromLoginToken","addFriend","userId","sub","alert","REST","process","env","REACT_APP_RESTURL","url","fetch","method","headers","body","JSON","stringify","friendCode","then","res","ok","Error","status","json","data","message","catch","err","console","error","addfriend"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/util/AddFriendBySub.jsx"],"sourcesContent":["import getSubFromLoginToken from \"./getSubFromLoginToken\"; // ✅ 올바른 import\r\n\r\nconst addFriend = (userId) => {\r\n  const sub = getSubFromLoginToken();\r\n  if (!sub) {\r\n    alert(\"로그인 정보가 없습니다.\");\r\n    return;\r\n  }\r\n\r\n  const REST = process.env.REACT_APP_RESTURL;\r\n  const url = `https://${REST}/api/addfriend`;\r\n\r\n  fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ sub, friendCode: userId }),\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        throw new Error(`서버 응답 에러: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      alert(data.message || \"친구 추가 성공!\");\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"❌ 요청 오류:\", err);\r\n      alert(err.message || \"오류가 발생했습니다.\");\r\n    });\r\n};\r\n\r\nexport default addfriend;\r\n"],"mappings":"AAAA,OAAOA,oBAAoB,MAAM,wBAAwB,CAAC,CAAC;;AAE3D,MAAMC,SAAS,GAAIC,MAAM,IAAK;EAC5B,MAAMC,GAAG,GAAGH,oBAAoB,CAAC,CAAC;EAClC,IAAI,CAACG,GAAG,EAAE;IACRC,KAAK,CAAC,eAAe,CAAC;IACtB;EACF;EAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC1C,MAAMC,GAAG,GAAG,WAAWJ,IAAI,gBAAgB;EAE3CK,KAAK,CAACD,GAAG,EAAE;IACTE,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEZ,GAAG;MAAEa,UAAU,EAAEd;IAAO,CAAC;EAClD,CAAC,CAAC,CACCe,IAAI,CAAEC,GAAG,IAAK;IACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,aAAaF,GAAG,CAACG,MAAM,EAAE,CAAC;IAC5C;IACA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;IACdnB,KAAK,CAACmB,IAAI,CAACC,OAAO,IAAI,WAAW,CAAC;EACpC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEF,GAAG,CAAC;IAC9BtB,KAAK,CAACsB,GAAG,CAACF,OAAO,IAAI,aAAa,CAAC;EACrC,CAAC,CAAC;AACN,CAAC;AAED,eAAeK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}