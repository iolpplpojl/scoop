{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\objects\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chat(props) {\n  _s();\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isFriend, setIsFriend] = useState(null); // 친구 여부 (초기값: null)\n  const menuRef = useRef(null);\n  const userId = props.userId; // 채팅창 유저의 identifyCode\n  const loggedInUserId = getSubFromLoginToken(); // 로그인한 사용자의 identifyCode\n\n  console.log(\"🔍 userId:\", userId, \"loggedInUserId:\", loggedInUserId);\n\n  // ✅ 친구 여부 확인 API 호출 (자기 자신이면 요청 안 보냄)\n  useEffect(() => {\n    if (!userId || !loggedInUserId) return; // ID 값이 없으면 실행 X\n    if (String(userId) === String(loggedInUserId)) {\n      console.log(\"⚠️ 자기 자신이므로 API 요청 생략\");\n      return;\n    }\n    console.log(\"📡 API 요청 보내는 중...\");\n    fetch(`https://192.168.0.89:9999/api/isfriend?userId=${userId}&myId=${loggedInUserId}`).then(response => response.json()) // JSON 변환\n    .then(data => {\n      console.log(\"✅ API 응답 데이터:\", data);\n\n      // 🛠 서버 응답이 { state: true } 또는 { state: 1 } 일 수 있으므로 체크\n      if (data && (data.state === true || data.state === 1)) {\n        setIsFriend(true);\n      } else if (data && (data.state === false || data.state === 0)) {\n        setIsFriend(false);\n      } else {\n        console.error(\"❌ 예상과 다른 응답 형식:\", data);\n        setIsFriend(false); // 기본값 false 설정\n      }\n    }).catch(error => {\n      console.error(\"❌ 친구 여부 확인 오류:\", error);\n      setIsFriend(false);\n    });\n  }, [userId, loggedInUserId]);\n  function handleContextMenu(event) {\n    event.preventDefault(); // 기본적으로 기능하는 우클릭 메뉴 방지\n\n    // ✅ 자기 자신 체크 (우클릭 메뉴 X)\n    if (String(userId) === String(loggedInUserId)) {\n      console.log(\"⚠️ 자기 자신이므로 메뉴 표시 안 함\");\n      return;\n    }\n    setMenuPosition({\n      x: event.pageX,\n      y: event.pageY\n    });\n    setShowMenu(true);\n  }\n  function closeMenu() {\n    setShowMenu(false);\n  }\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        closeMenu();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onContextMenu: handleContextMenu,\n      className: \"chatmessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/512/6522/6522516.png\",\n        width: 50,\n        height: 50,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), \" : \", props.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: menuRef,\n      className: \"context-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"정보보기\"),\n        children: \"\\uC815\\uBCF4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), isFriend === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"1:1 채팅하기\"),\n          children: \"1:1 \\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"친구 삭제\"),\n          children: \"\\uCE5C\\uAD6C \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : isFriend === false ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(`친구 추가: ${props.userId}`),\n        children: \"\\uCE5C\\uAD6C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this) // API 응답 대기 상태\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"BoVoYUc1DZtdoqYR+T36cKsIXPk=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useRef","useEffect","getSubFromLoginToken","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","props","_s","showMenu","setShowMenu","menuPosition","setMenuPosition","x","y","isFriend","setIsFriend","menuRef","userId","loggedInUserId","console","log","String","fetch","then","response","json","data","state","error","catch","handleContextMenu","event","preventDefault","pageX","pageY","closeMenu","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","children","onContextMenu","className","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","text","date","ref","onClick","alert","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/objects/chat.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\";\r\n\r\nexport function Chat(props) {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\r\n    const [isFriend, setIsFriend] = useState(null); // 친구 여부 (초기값: null)\r\n    const menuRef = useRef(null);\r\n\r\n    const userId = props.userId; // 채팅창 유저의 identifyCode\r\n    const loggedInUserId = getSubFromLoginToken(); // 로그인한 사용자의 identifyCode\r\n\r\n    console.log(\"🔍 userId:\", userId, \"loggedInUserId:\", loggedInUserId);\r\n\r\n    // ✅ 친구 여부 확인 API 호출 (자기 자신이면 요청 안 보냄)\r\n    useEffect(() => {\r\n        if (!userId || !loggedInUserId) return; // ID 값이 없으면 실행 X\r\n        if (String(userId) === String(loggedInUserId)) {\r\n            console.log(\"⚠️ 자기 자신이므로 API 요청 생략\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"📡 API 요청 보내는 중...\");\r\n\r\n        fetch(`https://192.168.0.89:9999/api/isfriend?userId=${userId}&myId=${loggedInUserId}`)\r\n            .then(response => response.json()) // JSON 변환\r\n            .then(data => {\r\n                console.log(\"✅ API 응답 데이터:\", data);\r\n\r\n                // 🛠 서버 응답이 { state: true } 또는 { state: 1 } 일 수 있으므로 체크\r\n                if (data && (data.state === true || data.state === 1)) {\r\n                    setIsFriend(true);\r\n                } else if (data && (data.state === false || data.state === 0)) {\r\n                    setIsFriend(false);\r\n                } else {\r\n                    console.error(\"❌ 예상과 다른 응답 형식:\", data);\r\n                    setIsFriend(false); // 기본값 false 설정\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"❌ 친구 여부 확인 오류:\", error);\r\n                setIsFriend(false);\r\n            });\r\n    }, [userId, loggedInUserId]);\r\n\r\n    function handleContextMenu(event) {\r\n        event.preventDefault(); // 기본적으로 기능하는 우클릭 메뉴 방지\r\n\r\n        // ✅ 자기 자신 체크 (우클릭 메뉴 X)\r\n        if (String(userId) === String(loggedInUserId)) {\r\n            console.log(\"⚠️ 자기 자신이므로 메뉴 표시 안 함\");\r\n            return;\r\n        }\r\n\r\n        setMenuPosition({ x: event.pageX, y: event.pageY });\r\n        setShowMenu(true);\r\n    }\r\n\r\n    function closeMenu() {\r\n        setShowMenu(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                closeMenu();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <li onContextMenu={handleContextMenu} className=\"chatmessage\">\r\n                <img src=\"https://cdn-icons-png.flaticon.com/512/6522/6522516.png\" width={50} height={50} alt=\"Profile\" />\r\n                <b>{props.name}</b> : {props.text} <span className=\"date\">{props.date}</span>\r\n            </li>\r\n\r\n            {showMenu && (\r\n                <div ref={menuRef} className=\"context-menu\">\r\n                    <button onClick={() => alert(\"정보보기\")}>정보보기</button>\r\n                    {isFriend === true ? (\r\n                        <>\r\n                            <button onClick={() => alert(\"1:1 채팅하기\")}>1:1 채팅</button>\r\n                            <button onClick={() => alert(\"친구 삭제\")}>친구 삭제</button>\r\n                        </>\r\n                    ) : isFriend === false ? (\r\n                        <button onClick={() => alert(`친구 추가: ${props.userId}`)}>친구 추가</button>\r\n                    ) : (\r\n                        <button disabled>로딩 중...</button> // API 응답 대기 상태\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}