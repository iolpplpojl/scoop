{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // ✅ useNavigate 추가\n//import './Signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate(); // ✅ useNavigate() 사용\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('https://192.168.0.82:9999/api/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id,\n        pwd: password,\n        email: email,\n        nickname: nickname\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      alert(\"done\");\n      navigate(\"/login\");\n    }).catch(err => {\n      console.log(err.response);\n      alert(\"error\");\n    });\n  };\n\n  /** \r\n              const data = await response.json();\r\n              if (data.status === 'error') {\r\n                  setErrorMessage(data.error);\r\n              } else {\r\n                  alert('회원가입 성공');\r\n                  navigate('/login'); \r\n              }\r\n          } catch (error) {\r\n              setErrorMessage('회원가입 실패');\r\n          }\r\n              \r\n      };\r\n      */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"id\",\n          value: id,\n          onChange: e => setId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nickname\",\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nickname\",\n          value: nickname,\n          onChange: e => setNickname(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUp, \"PW88SrLZo9IRXjuZ35K37yAxusg=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","id","setId","password","setPassword","email","setEmail","nickname","setNickname","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","body","JSON","stringify","pwd","headers","then","res","console","log","alert","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/scoop/scoop_front/src/SignUp.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // ✅ useNavigate 추가\r\n//import './Signup.css';\r\n\r\nconst SignUp = () => {\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [nickname, setNickname] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate(); // ✅ useNavigate() 사용\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n            const response = await fetch('https://192.168.0.82:9999/api/register', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    id: id,\r\n                    pwd: password,\r\n                    email: email,\r\n                    nickname: nickname,\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                alert(\"done\");\r\n                navigate(\"/login\");\r\n            }).catch((err) => {\r\n                console.log(err.response);\r\n                alert(\"error\");\r\n            });\r\n        }\r\n        \r\n/** \r\n            const data = await response.json();\r\n            if (data.status === 'error') {\r\n                setErrorMessage(data.error);\r\n            } else {\r\n                alert('회원가입 성공');\r\n                navigate('/login'); \r\n            }\r\n        } catch (error) {\r\n            setErrorMessage('회원가입 실패');\r\n        }\r\n            \r\n    };\r\n    */\r\n    \r\n    return (\r\n        <div className=\"signup-container\">\r\n            <h2>회원가입</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"id\">아이디</label>\r\n                    <input type=\"text\" id=\"id\" value={id} onChange={(e) => setId(e.target.value)} required />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"password\">비밀번호</label>\r\n                    <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">이메일</label>\r\n                    <input type=\"email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"nickname\">닉네임</label>\r\n                    <input type=\"text\" id=\"nickname\" value={nickname} onChange={(e) => setNickname(e.target.value)} required />\r\n                </div>\r\n                {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n                <button type=\"submit\" className=\"submit-btn\">회원가입</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}