{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\component\\\\RightClickContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RightClickContainer = ({\n  userId,\n  loggedInUserId,\n  addFriend,\n  deleteFriend,\n  children,\n  setHandleContextMenu,\n  handleChat // ✅ 여기서 받아옴\n}) => {\n  _s();\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [isFriend, setIsFriend] = useState(null);\n  const menuRef = useRef(null);\n  const REST = process.env.REACT_APP_RESTURL;\n\n  // 우클릭 이벤트 핸들러\n  async function handleContextMenu(event, id) {\n    if (String(id) === String(loggedInUserId)) return;\n    event.preventDefault();\n    setSelectedUserId(id);\n    setMenuPosition({\n      x: event.pageX,\n      y: event.pageY\n    });\n    try {\n      const res = await fetch(`https://${REST}/api/isfriend?userId=${id}&myId=${loggedInUserId}`);\n      const data = await res.json();\n      setIsFriend(data && (data.state === true || data.state === 1));\n    } catch (err) {\n      console.error(\"친구 상태 확인 실패\", err);\n      setIsFriend(false);\n    }\n    setShowMenu(true);\n  }\n\n  // 외부 클릭 시 닫기\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        closeMenu();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  // 우클릭 핸들러 외부로 전달\n  useEffect(() => {\n    if (setHandleContextMenu) {\n      setHandleContextMenu(() => handleContextMenu);\n    }\n  }, [setHandleContextMenu]);\n  function closeMenu() {\n    setShowMenu(false);\n    setSelectedUserId(null);\n    setIsFriend(null);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"100%\"\n    },\n    children: [children, showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: menuRef,\n      style: {\n        position: \"absolute\",\n        top: menuPosition.y,\n        left: menuPosition.x,\n        background: \"#fff\",\n        border: \"1px solid #ccc\",\n        padding: \"5px\",\n        boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"정보보기\"),\n        children: \"\\uC815\\uBCF4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), isFriend ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (handleChat) handleChat(selectedUserId); // ✅ 외부 함수 실행\n            closeMenu();\n          },\n          children: \"1:1 \\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            await deleteFriend(selectedUserId, loggedInUserId);\n            closeMenu();\n          },\n          children: \"\\uCE5C\\uAD6C \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addFriend(selectedUserId);\n          closeMenu();\n        },\n        children: \"\\uCE5C\\uAD6C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(RightClickContainer, \"38/niEHLwSEL2IgxV0GCPpy/kY4=\");\n_c = RightClickContainer;\nexport default RightClickContainer;\nvar _c;\n$RefreshReg$(_c, \"RightClickContainer\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RightClickContainer","userId","loggedInUserId","addFriend","deleteFriend","children","setHandleContextMenu","handleChat","_s","showMenu","setShowMenu","menuPosition","setMenuPosition","x","y","selectedUserId","setSelectedUserId","isFriend","setIsFriend","menuRef","REST","process","env","REACT_APP_RESTURL","handleContextMenu","event","id","String","preventDefault","pageX","pageY","res","fetch","data","json","state","err","console","error","handleClickOutside","current","contains","target","closeMenu","document","addEventListener","removeEventListener","style","display","width","ref","position","top","left","background","border","padding","boxShadow","onClick","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/component/RightClickContainer.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\n\r\nconst RightClickContainer = ({\r\n  userId,\r\n  loggedInUserId,\r\n  addFriend,\r\n  deleteFriend,\r\n  children,\r\n  setHandleContextMenu,\r\n  handleChat, // ✅ 여기서 받아옴\r\n}) => {\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [isFriend, setIsFriend] = useState(null);\r\n  const menuRef = useRef(null);\r\n  const REST = process.env.REACT_APP_RESTURL;\r\n\r\n  // 우클릭 이벤트 핸들러\r\n  async function handleContextMenu(event, id) {\r\n    if (String(id) === String(loggedInUserId)) return;\r\n\r\n    event.preventDefault();\r\n    setSelectedUserId(id);\r\n    setMenuPosition({ x: event.pageX, y: event.pageY });\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `https://${REST}/api/isfriend?userId=${id}&myId=${loggedInUserId}`\r\n      );\r\n      const data = await res.json();\r\n      setIsFriend(data && (data.state === true || data.state === 1));\r\n    } catch (err) {\r\n      console.error(\"친구 상태 확인 실패\", err);\r\n      setIsFriend(false);\r\n    }\r\n\r\n    setShowMenu(true);\r\n  }\r\n\r\n  // 외부 클릭 시 닫기\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        closeMenu();\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // 우클릭 핸들러 외부로 전달\r\n  useEffect(() => {\r\n    if (setHandleContextMenu) {\r\n      setHandleContextMenu(() => handleContextMenu);\r\n    }\r\n  }, [setHandleContextMenu]);\r\n\r\n  function closeMenu() {\r\n    setShowMenu(false);\r\n    setSelectedUserId(null);\r\n    setIsFriend(null);\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"inline-block\", width: \"100%\" }}>\r\n      {children}\r\n\r\n      {showMenu && (\r\n        <div\r\n          ref={menuRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: menuPosition.y,\r\n            left: menuPosition.x,\r\n            background: \"#fff\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"5px\",\r\n            boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\",\r\n          }}\r\n        >\r\n          <button onClick={() => alert(\"정보보기\")}>정보보기</button>\r\n          {isFriend ? (\r\n            <>\r\n              <button\r\n                onClick={() => {\r\n                  if (handleChat) handleChat(selectedUserId); // ✅ 외부 함수 실행\r\n                  closeMenu();\r\n                }}\r\n              >\r\n                1:1 채팅\r\n              </button>\r\n              <button\r\n                onClick={async () => {\r\n                  await deleteFriend(selectedUserId, loggedInUserId);\r\n                  closeMenu();\r\n                }}\r\n              >\r\n                친구 삭제\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button\r\n              onClick={() => {\r\n                addFriend(selectedUserId);\r\n                closeMenu();\r\n              }}\r\n            >\r\n              친구 추가\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RightClickContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}