{"ast":null,"code":"const handleSubmit = async () => {\n  var _document$cookie$spli;\n  if (!friendCode) {\n    setError(\"친구 코드 입력이 필요합니다.\");\n    return;\n  }\n  let token = (_document$cookie$spli = document.cookie.split(\"; \").find(row => row.startsWith(\"token=\"))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split(\"=\")[1];\n  if (!token) {\n    token = localStorage.getItem(\"logintoken\");\n  }\n  if (!token) {\n    setError(\"로그인 정보가 없습니다.\");\n    return;\n  }\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    const sub = payload.sub;\n    const response = await fetch(\"https://192.168.0.89/api/addfriend\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n        Pragma: \"no-cache\",\n        Expires: \"0\"\n      },\n      body: JSON.stringify({\n        sub: sub,\n        friendCode: friendCode\n      })\n    });\n\n    // ✅ 응답 처리 순서 변경\n    let result;\n    try {\n      result = await response.json(); // JSON 응답 처리\n    } catch {\n      result = {}; // JSON 변환 실패 시 빈 객체\n    }\n    if (!response.ok) {\n      throw new Error(result.message || \"친구 추가 실패\");\n    }\n    alert(result.message || \"친구 추가 성공!\");\n    onClose();\n  } catch (error) {\n    console.error(\"❌ 요청 오류:\", error);\n    setError(error.message || \"오류가 발생했습니다.\");\n  }\n};","map":{"version":3,"names":["handleSubmit","_document$cookie$spli","friendCode","setError","token","document","cookie","split","find","row","startsWith","localStorage","getItem","payload","JSON","parse","atob","sub","response","fetch","method","headers","Authorization","Pragma","Expires","body","stringify","result","json","ok","Error","message","alert","onClose","error","console"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/component/AddFriend.jsx"],"sourcesContent":["const handleSubmit = async () => {\r\n    if (!friendCode) {\r\n      setError(\"친구 코드 입력이 필요합니다.\");\r\n      return;\r\n    }\r\n  \r\n    let token = document.cookie\r\n      .split(\"; \")\r\n      .find((row) => row.startsWith(\"token=\"))\r\n      ?.split(\"=\")[1];\r\n  \r\n    if (!token) {\r\n      token = localStorage.getItem(\"logintoken\");\r\n    }\r\n  \r\n    if (!token) {\r\n      setError(\"로그인 정보가 없습니다.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      const sub = payload.sub;\r\n  \r\n      const response = await fetch(\"https://192.168.0.89/api/addfriend\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n          \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\r\n          Pragma: \"no-cache\",\r\n          Expires: \"0\",\r\n        },\r\n        body: JSON.stringify({ sub: sub, friendCode: friendCode }),\r\n      });\r\n  \r\n      // ✅ 응답 처리 순서 변경\r\n      let result;\r\n      try {\r\n        result = await response.json(); // JSON 응답 처리\r\n      } catch {\r\n        result = {}; // JSON 변환 실패 시 빈 객체\r\n      }\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(result.message || \"친구 추가 실패\");\r\n      }\r\n  \r\n      alert(result.message || \"친구 추가 성공!\");\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"❌ 요청 오류:\", error);\r\n      setError(error.message || \"오류가 발생했습니다.\");\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAAA,IAAAC,qBAAA;EAC7B,IAAI,CAACC,UAAU,EAAE;IACfC,QAAQ,CAAC,kBAAkB,CAAC;IAC5B;EACF;EAEA,IAAIC,KAAK,IAAAH,qBAAA,GAAGI,QAAQ,CAACC,MAAM,CACxBC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,UAAU,CAAC,QAAQ,CAAC,CAAC,cAAAT,qBAAA,uBAF9BA,qBAAA,CAGRM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEjB,IAAI,CAACH,KAAK,EAAE;IACVA,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAC5C;EAEA,IAAI,CAACR,KAAK,EAAE;IACVD,QAAQ,CAAC,eAAe,CAAC;IACzB;EACF;EAEA,IAAI;IACF,MAAMU,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACZ,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMU,GAAG,GAAGJ,OAAO,CAACI,GAAG;IAEvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUlB,KAAK,EAAE;QAChC,eAAe,EAAE,qCAAqC;QACtDmB,MAAM,EAAE,UAAU;QAClBC,OAAO,EAAE;MACX,CAAC;MACDC,IAAI,EAAEX,IAAI,CAACY,SAAS,CAAC;QAAET,GAAG,EAAEA,GAAG;QAAEf,UAAU,EAAEA;MAAW,CAAC;IAC3D,CAAC,CAAC;;IAEF;IACA,IAAIyB,MAAM;IACV,IAAI;MACFA,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,MAAM;MACND,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACf;IAEA,IAAI,CAACT,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,MAAM,CAACI,OAAO,IAAI,UAAU,CAAC;IAC/C;IAEAC,KAAK,CAACL,MAAM,CAACI,OAAO,IAAI,WAAW,CAAC;IACpCE,OAAO,CAAC,CAAC;EACX,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAChC/B,QAAQ,CAAC+B,KAAK,CAACH,OAAO,IAAI,aAAa,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}