{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\component\\\\FriendsContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\"; // 로그인 토큰에서 sub값 추출 기능\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FriendsContainer() {\n  _s();\n  const REST = process.env.REACT_APP_RESTURL;\n  const [friendsData, setFriendsData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchFriendsData();\n  }, []);\n  const fetchFriendsData = () => {\n    const sub = getSubFromLoginToken();\n    if (!sub) {\n      setError(\"토큰 정보가 없습니다.\");\n      return;\n    }\n    console.log(\"sub 값:\", sub);\n    setLoading(true);\n    setError(null);\n    const url = `https://${REST}/api/getfriends`;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sub\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`서버 응답 에러: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      setFriendsData(data.length > 0 ? data : []);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"데이터 가져오기 실패:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  };\n  const handleChat = () => {\n    axios(`https://${REST}/api/getchatrooms`, {\n      method: \"post\",\n      params: {\n        id: id\n      },\n      withCredentials: true // 쿠키 및 인증 헤더를 포함하여 요청\n    }).then(res => {\n      console.log(res);\n      setServerQueue(prev => {\n        let data = res.data;\n        return {\n          ...prev,\n          [id]: res.data\n        };\n        //return {[message.data[\"channel\"]] : message.data};\n      });\n      return;\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uCE5C\\uAD6C \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC5D0\\uB7EC \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), friendsData !== null && (friendsData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friendsData.map((friend, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC2DD\\uBCC4\\uCF54\\uB4DC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), \" \", friend.identifyCode, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC544\\uC774\\uB514:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), \" \", friend.id, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uB2C9\\uB124\\uC784:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), \" \", friend.nickname, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChat,\n          children: \"\\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uCE5C\\uAD6C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(FriendsContainer, \"3oHBc2iITbn1vb/fnNP5EJx6HWU=\");\n_c = FriendsContainer;\nexport default FriendsContainer;\nvar _c;\n$RefreshReg$(_c, \"FriendsContainer\");","map":{"version":3,"names":["React","useState","useEffect","getSubFromLoginToken","jsxDEV","_jsxDEV","FriendsContainer","_s","REST","process","env","REACT_APP_RESTURL","friendsData","setFriendsData","loading","setLoading","error","setError","fetchFriendsData","sub","console","log","url","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","status","json","data","length","catch","err","message","handleChat","axios","params","id","withCredentials","setServerQueue","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","friend","index","identifyCode","nickname","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/scoop/scoop_front/src/component/FriendsContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\"; // 로그인 토큰에서 sub값 추출 기능\r\n\r\nexport function FriendsContainer() {\r\n  const REST = process.env.REACT_APP_RESTURL;\r\n\r\n  const [friendsData, setFriendsData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchFriendsData();\r\n  }, []);\r\n\r\n  const fetchFriendsData = () => {\r\n    const sub = getSubFromLoginToken();\r\n    if (!sub) {\r\n      setError(\"토큰 정보가 없습니다.\");\r\n      return;\r\n    }\r\n  \r\n    console.log(\"sub 값:\", sub);\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    const url = `https://${REST}/api/getfriends`;\r\n\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ sub }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`서버 응답 에러: ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setFriendsData(data.length > 0 ? data : []);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"데이터 가져오기 실패:\", err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  const handleChat = () => {\r\n\r\n     axios(`https://${REST}/api/getchatrooms`, {\r\n                    method : \"post\",\r\n                    params : {\r\n                        id: id,\r\n                    },\r\n                    withCredentials: true  // 쿠키 및 인증 헤더를 포함하여 요청\r\n                }).then((res) => { \r\n                        console.log(res);\r\n                        setServerQueue((prev) => \r\n                            {\r\n                                let data = res.data;\r\n                                return { ...prev,\r\n                                        [id] : res.data\r\n                                }\r\n                                //return {[message.data[\"channel\"]] : message.data};\r\n                            }\r\n                        );\r\n                        return;\r\n                }).catch((err) => { \r\n                        console.log(err);\r\n                        return;\r\n                });\r\n  }\r\n  return (\r\n    <div className=\"friends-container\">\r\n      <h3>친구 목록</h3>\r\n\r\n      {loading && <p>데이터 로딩 중...</p>}\r\n      {error && <p>에러 발생: {error}</p>}\r\n\r\n      {friendsData !== null && (\r\n        friendsData.length > 0 ? (\r\n          <ul>\r\n            {friendsData.map((friend, index) => (\r\n              <li key={index}>\r\n                <strong>식별코드:</strong> {friend.identifyCode} | \r\n                <strong>아이디:</strong> {friend.id} | \r\n                <strong>닉네임:</strong> {friend.nickname}\r\n                <button onClick={handleChat}>채팅</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>친구가 없습니다.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default FriendsContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}