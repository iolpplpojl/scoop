{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\scoop\\\\scoop_front\\\\src\\\\find-pw.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FindPw() {\n  _s();\n  const [id, setId] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const REST = process.env.REACT_APP_RESTURL; // API 주소 (환경 변수)\n\n  // 폼 제출 시 실행\n  const handleSubmit = e => {\n    e.preventDefault(); // 기본 동작 방지\n    doFindPw(); // POST 요청 실행\n  };\n  function doFindPw() {\n    console.log(email);\n    axios(`https://${REST}/api/find-password`, {\n      method: \"POST\",\n      data: JSON.stringify({\n        id: id,\n        email: email\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      alert(\"이메일로 비밀번호 재설정 주소를 보냈습니다\");\n      navigate(\"/login\");\n    }).catch(err => {\n      console.log(err.response);\n      alert(\"error\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"id\",\n          required: true,\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"\\uC774\\uBA54\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(FindPw, \"NICspzBSMmmxx+a8pMz4hiKElEI=\", false, function () {\n  return [useNavigate];\n});\n_c = FindPw;\nvar _c;\n$RefreshReg$(_c, \"FindPw\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","FindPw","_s","id","setId","email","setEmail","message","setMessage","navigate","REST","process","env","REACT_APP_RESTURL","handleSubmit","e","preventDefault","doFindPw","console","log","method","data","JSON","stringify","headers","then","res","alert","catch","err","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","required","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/scoop/scoop_front/src/find-pw.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport function FindPw() {\r\n    const [id,setId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const REST = process.env.REACT_APP_RESTURL; // API 주소 (환경 변수)\r\n    \r\n    // 폼 제출 시 실행\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // 기본 동작 방지\r\n        doFindPw(); // POST 요청 실행\r\n    };\r\n    function doFindPw(){\r\n        console.log(email);\r\n        axios(`https://${REST}/api/find-password`,{\r\n            method:\"POST\",\r\n            data: JSON.stringify({\r\n                id:id,\r\n                email: email\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then((res) => {\r\n            console.log(res);\r\n            alert(\"이메일로 비밀번호 재설정 주소를 보냈습니다\");\r\n            navigate(\"/login\");\r\n        }).catch((err) => {\r\n            console.log(err.response);\r\n            alert(\"error\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>아이디 찾기</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"id\">아이디</label>\r\n                    <input id=\"id\" required  value = {id} onChange={(e) => setId(e.target.value)}></input>  \r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">이메일</label>\r\n                    <input type=\"email\"  id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                <button type=\"submit\">비밀번호 찾기</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}