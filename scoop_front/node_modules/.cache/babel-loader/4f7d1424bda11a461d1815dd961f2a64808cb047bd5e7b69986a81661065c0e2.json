{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\component\\\\RequestFriends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getSubFromLoginToken() {\n  const token = localStorage.getItem(\"logintoken\");\n  if (!token) {\n    console.warn(\"로그인 토큰이 존재하지 않습니다.\");\n    return \"\";\n  }\n  try {\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"유효하지 않은 토큰 형식입니다.\");\n    }\n    const payload = parts[1];\n    const decodedPayload = JSON.parse(atob(payload));\n    return decodedPayload.sub || \"\";\n  } catch (error) {\n    console.error(\"토큰 파싱 중 오류 발생:\", error);\n    return \"\";\n  }\n}\nexport function RequestFriends() {\n  _s();\n  const REST = process.env.REACT_APP_RESTURL;\n  const [friendsData, setFriendsData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [pendingActions, setPendingActions] = useState({});\n  const fetchFriendsData = () => {\n    setFriendsData(null); // ✅ 기존 데이터 초기화 (중복 방지)\n    const sub = getSubFromLoginToken();\n    if (!sub) {\n      setError(\"토큰 정보가 없습니다.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const url = `https://${REST}/api/requestfriends`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sub\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(`서버 응답 에러: ${res.status}`)).then(data => {\n      setFriendsData(data.length > 0 ? data : []);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"데이터 가져오기 실패:\", err);\n      setError(err);\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchFriendsData();\n  }, []);\n  const handleFriendAction = (identifyCode, state) => {\n    const sub = getSubFromLoginToken();\n    if (!sub) {\n      setError(\"토큰 정보가 없습니다.\");\n      return;\n    }\n    if (pendingActions[identifyCode]) return;\n    setPendingActions(prev => ({\n      ...prev,\n      [identifyCode]: true\n    }));\n    const url = `https://${REST}/api/updatefriend`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sub,\n        identifyCode,\n        state\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(`서버 응답 에러: ${res.status}`)).then(() => {\n      setTimeout(fetchFriendsData, 300);\n    }).catch(err => {\n      console.error(\"친구 요청 처리 실패:\", err);\n      setError(err);\n    }).finally(() => {\n      setTimeout(() => {\n        setPendingActions(prev => ({\n          ...prev,\n          [identifyCode]: false\n        }));\n      }, 500);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uCE5C\\uAD6C\\uC694\\uCCAD \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchFriendsData,\n      children: \"\\uCE5C\\uAD6C\\uC694\\uCCAD \\uBAA9\\uB85D \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC5D0\\uB7EC \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), friendsData !== null && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.from(new Map(friendsData.map(friend => [friend.identifyCode, friend])).values()).map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC2DD\\uBCC4\\uCF54\\uB4DC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), \" \", friend.identifyCode, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC544\\uC774\\uB514:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), \" \", friend.id, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uB2C9\\uB124\\uC784:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), \" \", friend.nickname, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFriendAction(friend.identifyCode, 1),\n          disabled: pendingActions[friend.identifyCode],\n          children: pendingActions[friend.identifyCode] ? \"처리 중...\" : \"수락\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFriendAction(friend.identifyCode, -1),\n          disabled: pendingActions[friend.identifyCode],\n          children: pendingActions[friend.identifyCode] ? \"처리 중...\" : \"거절\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, friend.identifyCode, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(RequestFriends, \"5srcV9Q6LzqYX+hAd6PvPOfOMhQ=\");\n_c = RequestFriends;\nvar _c;\n$RefreshReg$(_c, \"RequestFriends\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getSubFromLoginToken","token","localStorage","getItem","console","warn","parts","split","length","Error","payload","decodedPayload","JSON","parse","atob","sub","error","RequestFriends","_s","REST","process","env","REACT_APP_RESTURL","friendsData","setFriendsData","loading","setLoading","setError","pendingActions","setPendingActions","fetchFriendsData","url","fetch","method","headers","body","stringify","then","res","ok","json","Promise","reject","status","data","catch","err","handleFriendAction","identifyCode","state","prev","setTimeout","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","Map","map","friend","values","id","nickname","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/component/RequestFriends.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction getSubFromLoginToken() {\r\n  const token = localStorage.getItem(\"logintoken\");\r\n  if (!token) {\r\n    console.warn(\"로그인 토큰이 존재하지 않습니다.\");\r\n    return \"\";\r\n  }\r\n\r\n  try {\r\n    const parts = token.split(\".\");\r\n    if (parts.length !== 3) {\r\n      throw new Error(\"유효하지 않은 토큰 형식입니다.\");\r\n    }\r\n    const payload = parts[1];\r\n    const decodedPayload = JSON.parse(atob(payload));\r\n    return decodedPayload.sub || \"\";\r\n  } catch (error) {\r\n    console.error(\"토큰 파싱 중 오류 발생:\", error);\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function RequestFriends() {\r\n  const REST = process.env.REACT_APP_RESTURL;\r\n  const [friendsData, setFriendsData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [pendingActions, setPendingActions] = useState({});\r\n\r\n  const fetchFriendsData = () => {\r\n    setFriendsData(null);  // ✅ 기존 데이터 초기화 (중복 방지)\r\n    const sub = getSubFromLoginToken();\r\n    if (!sub) {\r\n      setError(\"토큰 정보가 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    const url = `https://${REST}/api/requestfriends`;\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ sub }),\r\n    })\r\n      .then((res) => res.ok ? res.json() : Promise.reject(`서버 응답 에러: ${res.status}`))\r\n      .then((data) => {\r\n        setFriendsData(data.length > 0 ? data : []);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"데이터 가져오기 실패:\", err);\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFriendsData();\r\n  }, []);\r\n\r\n  const handleFriendAction = (identifyCode, state) => {\r\n    const sub = getSubFromLoginToken();\r\n    if (!sub) {\r\n      setError(\"토큰 정보가 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    if (pendingActions[identifyCode]) return;\r\n\r\n    setPendingActions((prev) => ({ ...prev, [identifyCode]: true }));\r\n\r\n    const url = `https://${REST}/api/updatefriend`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ sub, identifyCode, state }),\r\n    })\r\n      .then((res) => res.ok ? res.json() : Promise.reject(`서버 응답 에러: ${res.status}`))\r\n      .then(() => {\r\n        setTimeout(fetchFriendsData, 300);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"친구 요청 처리 실패:\", err);\r\n        setError(err);\r\n      })\r\n      .finally(() => {\r\n        setTimeout(() => {\r\n          setPendingActions((prev) => ({ ...prev, [identifyCode]: false }));\r\n        }, 500);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"friends-container\">\r\n      <h3>친구요청 목록</h3>\r\n      <button onClick={fetchFriendsData}>친구요청 목록 가져오기</button>\r\n\r\n      {loading && <p>데이터 로딩 중...</p>}\r\n      {error && <p>에러 발생: {error}</p>}\r\n\r\n      {friendsData !== null && (\r\n        <ul>\r\n        {Array.from(\r\n          new Map(friendsData.map((friend) => [friend.identifyCode, friend])).values()\r\n        ).map((friend) => (\r\n          <li key={friend.identifyCode}>\r\n            <strong>식별코드:</strong> {friend.identifyCode} |{\" \"}\r\n            <strong>아이디:</strong> {friend.id} |{\" \"}\r\n            <strong>닉네임:</strong> {friend.nickname}\r\n            \r\n            <button \r\n              onClick={() => handleFriendAction(friend.identifyCode, 1)} \r\n              disabled={pendingActions[friend.identifyCode]}\r\n            >\r\n              {pendingActions[friend.identifyCode] ? \"처리 중...\" : \"수락\"}\r\n            </button>\r\n      \r\n            <button \r\n              onClick={() => handleFriendAction(friend.identifyCode, -1)} \r\n              disabled={pendingActions[friend.identifyCode]}\r\n            >\r\n              {pendingActions[friend.identifyCode] ? \"처리 중...\" : \"거절\"}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}