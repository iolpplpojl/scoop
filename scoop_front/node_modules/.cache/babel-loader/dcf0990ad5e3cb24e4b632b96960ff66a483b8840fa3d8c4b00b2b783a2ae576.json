{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ResetPassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const token = searchParams.get(\"token\"); // URL에서 token 가져오기\n  const REST = process.env.REACT_APP_RESTURL; // API 주소\n\n  useEffect(() => {\n    if (!token) {\n      setMessage(\"유효한 토큰이 없습니다.\");\n    }\n  }, [token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"비밀번호가 일치하지 않습니다.\");\n      return;\n    }\n    try {\n      const res = await axios.post(`https://${REST}/api/reset-password`, {\n        token,\n        newPassword: password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        } // ✅ 헤더 추가\n      });\n      alert(\"비밀번호가 변경되었습니다. 로그인 페이지로 이동합니다.\");\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(err.response);\n      setMessage(\"비밀번호 변경에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"g/9HWbyH0CwYhAUAzzN2ACyxQbo=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","axios","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","searchParams","navigate","token","get","REST","process","env","REACT_APP_RESTURL","handleSubmit","e","preventDefault","res","post","newPassword","headers","alert","err","console","error","response","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/GitHub/scoop/scoop_front/src/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport function ResetPassword() {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [searchParams] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    \r\n    const token = searchParams.get(\"token\"); // URL에서 token 가져오기\r\n    const REST = process.env.REACT_APP_RESTURL; // API 주소\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            setMessage(\"유효한 토큰이 없습니다.\");\r\n        }\r\n    }, [token]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage(\"비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post(`https://${REST}/api/reset-password`, {\r\n                token,\r\n                newPassword: password,\r\n            }\r\n            ,{\r\n                    headers: { \"Content-Type\": \"application/json\" } // ✅ 헤더 추가\r\n                });\r\n\r\n            alert(\"비밀번호가 변경되었습니다. 로그인 페이지로 이동합니다.\");\r\n            navigate(\"/login\");\r\n        } catch (err) {\r\n            console.error(err.response);\r\n            setMessage(\"비밀번호 변경에 실패했습니다.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id='Signup'>\r\n        <div className=\"signup-container\">\r\n            <h2>비밀번호 재설정</h2>\r\n            {message && <p className=\"error-message\">{message}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group\">\r\n                    <label>새 비밀번호</label>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <label>비밀번호 확인</label>\r\n                    <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-btn\">비밀번호 변경</button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}