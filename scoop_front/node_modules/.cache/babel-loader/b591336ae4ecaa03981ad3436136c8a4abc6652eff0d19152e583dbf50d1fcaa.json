{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\objects\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chat(props) {\n  _s();\n  const {\n    userName,\n    text,\n    date\n  } = props; // props에서 직접 받도록 변경\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const menuRef = useRef(null);\n  const userId = props.userId; // props에서 userId 직접 받음\n  const currentUserId = getSubFromLoginToken();\n  function handleContextMenu(event) {\n    if (userId === currentUserId) {\n      return; // 본인의 메시지라면 컨텍스트 메뉴를 열지 않음\n    }\n    event.preventDefault();\n    setMenuPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    setShowMenu(true);\n  }\n  function closeMenu() {\n    setShowMenu(false);\n  }\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        closeMenu();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onContextMenu: handleContextMenu,\n      className: \"chatmessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/512/6522/6522516.png\",\n        width: 50,\n        height: 50,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: name || \"Unknown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \" : \", text || \"No message\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: date || \"No date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 69\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: menuRef,\n      className: \"context-menu\",\n      style: {\n        top: `${menuPosition.y}px`,\n        left: `${menuPosition.x}px`,\n        position: \"absolute\",\n        background: \"white\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        boxShadow: \"0px 0px 5px rgba(0,0,0,0.2)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(`답장하기: ${userName} (ID: ${JSON.stringify(userId)})`),\n        children: \"\\uB2F5\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(`삭제하기 (ID: ${JSON.stringify(userId)})`),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(`공유하기 (ID: ${JSON.stringify(userId)})`),\n        children: \"\\uACF5\\uC720\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"kigInO3KoVVy7Io3KrJME6FdKWE=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useRef","useEffect","getSubFromLoginToken","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","props","_s","userName","text","date","showMenu","setShowMenu","menuPosition","setMenuPosition","x","y","menuRef","userId","currentUserId","handleContextMenu","event","preventDefault","clientX","clientY","closeMenu","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","children","onContextMenu","className","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","ref","style","top","left","position","background","border","padding","boxShadow","onClick","alert","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/objects/chat.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\";\r\n\r\nexport function Chat(props) {\r\n    const { userName, text, date } = props; // props에서 직접 받도록 변경\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\r\n    const menuRef = useRef(null);\r\n    const userId = props.userId; // props에서 userId 직접 받음\r\n    const currentUserId = getSubFromLoginToken();\r\n\r\n    function handleContextMenu(event) {\r\n        if (userId === currentUserId) {\r\n            return; // 본인의 메시지라면 컨텍스트 메뉴를 열지 않음\r\n        }\r\n        event.preventDefault();\r\n        setMenuPosition({ x: event.clientX, y: event.clientY });\r\n        setShowMenu(true);\r\n    }\r\n\r\n    function closeMenu() {\r\n        setShowMenu(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                closeMenu();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <li onContextMenu={handleContextMenu} className=\"chatmessage\">\r\n                <img src=\"https://cdn-icons-png.flaticon.com/512/6522/6522516.png\" width={50} height={50} alt=\"Profile\" />\r\n                <b>{name || \"Unknown\"}</b> : {text || \"No message\"} <span className=\"date\">{date || \"No date\"}</span>\r\n            </li>\r\n\r\n            {showMenu && (\r\n                <div \r\n                    ref={menuRef}\r\n                    className=\"context-menu\"\r\n                    style={{ top: `${menuPosition.y}px`, left: `${menuPosition.x}px`, position: \"absolute\", background: \"white\", border: \"1px solid #ccc\", padding: \"10px\", boxShadow: \"0px 0px 5px rgba(0,0,0,0.2)\" }}\r\n                >\r\n                    <button onClick={() => alert(`답장하기: ${userName} (ID: ${JSON.stringify(userId)})`)}>답장</button>\r\n                    <button onClick={() => alert(`삭제하기 (ID: ${JSON.stringify(userId)})`)}>삭제</button>\r\n                    <button onClick={() => alert(`공유하기 (ID: ${JSON.stringify(userId)})`)}>공유</button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}