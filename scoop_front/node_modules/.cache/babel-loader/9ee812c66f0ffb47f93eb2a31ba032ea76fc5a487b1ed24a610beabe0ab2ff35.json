{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\component\\\\ServerContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { Server } from \"../objects/server\";\nimport { AddServer } from \"../objects/addServer\";\nimport { Sidebar } from \"../tool/Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport { Context } from \"../Connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ServerContainer() {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isServerSelected, setIsServerSeleceted] = useState(false);\n  const {\n    server\n  } = useParams();\n  const {\n    getServerByChannel,\n    serverQueue,\n    wsConnected\n  } = useContext(Context);\n  const [seed, setSeed] = useState(\"\");\n  useEffect(() => {\n    if (wsConnected) {\n      if (server != \"@me\") {\n        getServerByChannel(server);\n        console.log(server + \"asdf1234567\");\n      }\n    }\n  }, [server, wsConnected]);\n  useEffect(() => {\n    if (wsConnected) {\n      console.log(\"seed asdf 서버\");\n      setSeed(server);\n    }\n  }, [serverQueue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll serverlist\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"server\",\n          children: [/*#__PURE__*/_jsxDEV(Server, {\n            server: \"@me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Server, {\n            server: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Server, {\n            server: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Server, {\n            server: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AddServer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), server && server != \"@me\" ? /*#__PURE__*/_jsxDEV(Sidebar, {\n      server: serverQueue[server],\n      seed: seed,\n      wsConnected: wsConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 44\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n}\n_s(ServerContainer, \"qw5PD1OCYu5/68bTV0WR/U+7CWQ=\", false, function () {\n  return [useParams];\n});\n_c = ServerContainer;\nvar _c;\n$RefreshReg$(_c, \"ServerContainer\");","map":{"version":3,"names":["useContext","useEffect","useState","Server","AddServer","Sidebar","useParams","Context","jsxDEV","_jsxDEV","ServerContainer","_s","isPopupOpen","setIsPopupOpen","isServerSelected","setIsServerSeleceted","server","getServerByChannel","serverQueue","wsConnected","seed","setSeed","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/component/ServerContainer.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { Server } from \"../objects/server\";\r\nimport { AddServer } from \"../objects/addServer\";\r\nimport { Sidebar } from \"../tool/Sidebar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Context } from \"../Connector\";\r\n\r\nexport function ServerContainer() {\r\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n    const [isServerSelected,setIsServerSeleceted] = useState(false);\r\n    const {server} = useParams();\r\n    const {getServerByChannel,serverQueue,wsConnected} = useContext(Context);\r\n    const [seed, setSeed] = useState(\"\");\r\n    \r\n    useEffect(()=>{\r\n      if(wsConnected){\r\n        if(server != \"@me\"){\r\n          getServerByChannel(server);\r\n          console.log(server + \"asdf1234567\");\r\n        }\r\n      }\r\n    },[server,wsConnected])\r\n\r\n    useEffect(()=>{\r\n      if(wsConnected){\r\n        console.log(\"seed asdf 서버\")\r\n        setSeed(server);\r\n      }\r\n    },[serverQueue])\r\n    return (\r\n      <div className=\"App\"> \r\n      <div className=\"scroll serverlist\">\r\n        <div>\r\n            <ul className=\"server\">\r\n                <Server server=\"@me\"></Server>\r\n                <Server server=\"1\"></Server>\r\n                <Server server=\"2\"></Server>\r\n                <Server server=\"3\"></Server>\r\n                <AddServer></AddServer>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n            { (server && server != \"@me\")? <Sidebar server={serverQueue[server]} seed={seed} wsConnected={wsConnected}></Sidebar> :  null }\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}