{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login(props) {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    doLogin();\n  };\n  function doLogin() {\n    //axios로 로그인 요청, const trylogin = true일때 실행 X, response not ok면 다시 trylogin = false;, ok면 JWT 생성하고 메인으로 이동\n    console.log(id);\n    console.log(pwd);\n    console.log(\"doLogin\");\n    axios(\"http://192.168.0.82:9999/api/login\", {\n      method: \"get\",\n      params: {\n        id: id,\n        pwd: pwd\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        const token = res.headers['authorization'].split(' ')[1];\n        localStorage.setItem('logintoken', token);\n        console.log(token);\n        console.log(res);\n      }\n    }).catch(err => {\n      console.log(err.response.data);\n      alert(\"아이디가 안됨! \");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Channel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"OutputChat\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"id\",\n          required: true,\n          value: id,\n          onChange: e => setId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), \" ID \", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"pwd\",\n          required: true,\n          value: pwd,\n          onChange: e => setPwd(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), \" PWD \", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 109\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" go \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"fEZjFq8eDXrTCn33D3okOY0iKjs=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","useState","useParams","axios","jsxDEV","_jsxDEV","Login","props","_s","id","setId","pwd","setPwd","handleSubmit","e","preventDefault","doLogin","console","log","method","params","then","res","status","token","headers","split","localStorage","setItem","catch","err","response","data","alert","class","children","onSubmit","required","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/scoop/scoop_front/src/login.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport function Login(props){\r\n    const [id,setId] = useState(\"\");\r\n    const [pwd,setPwd] = useState(\"\");\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        doLogin();\r\n    }\r\n    \r\n    function doLogin(){\r\n    //axios로 로그인 요청, const trylogin = true일때 실행 X, response not ok면 다시 trylogin = false;, ok면 JWT 생성하고 메인으로 이동\r\n        console.log(id);\r\n        console.log(pwd);\r\n        console.log(\"doLogin\");\r\n        axios(\"http://192.168.0.82:9999/api/login\", {\r\n            method : \"get\",\r\n            params : {\r\n                id: id,\r\n                pwd : pwd\r\n            },\r\n        }).then((res) => {\r\n            if(res.status === 200){\r\n                const token = res.headers['authorization'].split(' ')[1];\r\n                localStorage.setItem('logintoken', token);\r\n                console.log(token);\r\n                console.log(res);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err.response.data);\r\n            alert(\"아이디가 안됨! \");\r\n        });\r\n        \r\n    }\r\n    return(\r\n        <div class=\"Channel\">\r\n        <div class=\"OutputChat\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input id=\"id\" required  value = {id} onChange={(e) => setId(e.target.value)}></input> ID <p></p>\r\n                <input id=\"pwd\" required value ={pwd} onChange={(e) => setPwd(e.target.value)}></input> PWD <p></p>\r\n                <button type=\"submit\"> go </button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}   \r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,OAAO,SAASC,KAAKA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACxB,MAAM,CAACC,EAAE,EAACC,KAAK,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC/B,MAAM,CAACU,GAAG,EAACC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAAC,CAAC;EACb,CAAC;EAED,SAASA,OAAOA,CAAA,EAAE;IAClB;IACIC,OAAO,CAACC,GAAG,CAACT,EAAE,CAAC;IACfQ,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;IAChBM,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBf,KAAK,CAAC,oCAAoC,EAAE;MACxCgB,MAAM,EAAG,KAAK;MACdC,MAAM,EAAG;QACLX,EAAE,EAAEA,EAAE;QACNE,GAAG,EAAGA;MACV;IACJ,CAAC,CAAC,CAACU,IAAI,CAAEC,GAAG,IAAK;MACb,IAAGA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAC;QAClB,MAAMC,KAAK,GAAGF,GAAG,CAACG,OAAO,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACxDC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,KAAK,CAAC;QACzCP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;QAClBP,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;MACpB;IACJ,CAAC,CAAC,CAACO,KAAK,CAAEC,GAAG,IAAK;MACdb,OAAO,CAACC,GAAG,CAACY,GAAG,CAACC,QAAQ,CAACC,IAAI,CAAC;MAC9BC,KAAK,CAAC,WAAW,CAAC;IACtB,CAAC,CAAC;EAEN;EACA,oBACI5B,OAAA;IAAK6B,KAAK,EAAC,SAAS;IAAAC,QAAA,eACpB9B,OAAA;MAAK6B,KAAK,EAAC,YAAY;MAAAC,QAAA,eACnB9B,OAAA;QAAM+B,QAAQ,EAAEvB,YAAa;QAAAsB,QAAA,gBACzB9B,OAAA;UAAOI,EAAE,EAAC,IAAI;UAAC4B,QAAQ;UAAEC,KAAK,EAAI7B,EAAG;UAAC8B,QAAQ,EAAGzB,CAAC,IAAKJ,KAAK,CAACI,CAAC,CAAC0B,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,QAAI,eAAAvC,OAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjGvC,OAAA;UAAOI,EAAE,EAAC,KAAK;UAAC4B,QAAQ;UAACC,KAAK,EAAG3B,GAAI;UAAC4B,QAAQ,EAAGzB,CAAC,IAAKF,MAAM,CAACE,CAAC,CAAC0B,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,SAAK,eAAAvC,OAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnGvC,OAAA;UAAQwC,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACpC,EAAA,CA3CeF,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}