{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\component\\\\RightClickContainer.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RightClickContainer = ({\n  userId,\n  loggedInUserId,\n  addFriend,\n  deleteFriend,\n  children,\n  setHandleContextMenu\n}) => {\n  _s();\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [isFriend, setIsFriend] = useState(null);\n  const menuRef = useRef(null);\n  const REST = process.env.REACT_APP_RESTURL;\n\n  // 우클릭 이벤트 핸들러\n  async function handleContextMenu(event, id) {\n    if (String(id) === String(loggedInUserId)) return;\n    event.preventDefault();\n    setSelectedUserId(id);\n    setMenuPosition({\n      x: event.pageX,\n      y: event.pageY\n    });\n    try {\n      const res = await fetch(`https://${REST}/api/isfriend?userId=${id}&myId=${loggedInUserId}`);\n      const data = await res.json();\n      setIsFriend(data && (data.state === true || data.state === 1));\n    } catch (err) {\n      console.error(\"친구 상태 확인 실패\", err);\n      setIsFriend(false);\n    }\n    setShowMenu(true);\n  }\n\n  // 함수 전달\n  useEffect(() => {\n    if (setHandleContextMenu) {\n      setHandleContextMenu(() => handleContextMenu);\n    }\n  }, [setHandleContextMenu]);\n\n  // 외부 클릭 시 닫기\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        closeMenu();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  function closeMenu() {\n    setShowMenu(false);\n    setSelectedUserId(null);\n    setIsFriend(null);\n  }\n  const handleDirectMessage = async () => {\n    try {\n      const res = await fetch(\"http://192.168.0.89:9999/api/findchatroom\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userA: loggedInUserId,\n          userB: selectedUserId\n        })\n      });\n      if (!res.ok) {\n        throw new Error(\"채팅방 요청 실패\");\n      }\n      const data = await res.json();\n      const chatroomId = data.chatroomId;\n      if (!chatroomId) {\n        alert(\"채팅방 ID를 찾을 수 없습니다.\");\n        return;\n      }\n      window.location.href = `/channel/@me/${chatroomId}`;\n    } catch (err) {\n      console.error(\"❌ 채팅방 이동 실패:\", err);\n      alert(\"1:1 채팅을 시작할 수 없습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"100%\"\n    },\n    children: [children, showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: menuRef,\n      style: {\n        position: \"absolute\",\n        top: menuPosition.y,\n        left: menuPosition.x,\n        background: \"#fff\",\n        border: \"1px solid #ccc\",\n        padding: \"5px\",\n        boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"정보보기\"),\n        children: \"\\uC815\\uBCF4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), isFriend ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDirectMessage,\n          children: \"1:1 \\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            await deleteFriend(selectedUserId, loggedInUserId);\n            closeMenu();\n          },\n          children: \"\\uCE5C\\uAD6C \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addFriend(selectedUserId);\n          closeMenu();\n        },\n        children: \"\\uCE5C\\uAD6C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(RightClickContainer, \"38/niEHLwSEL2IgxV0GCPpy/kY4=\");\n_c = RightClickContainer;\nexport default RightClickContainer;\nvar _c;\n$RefreshReg$(_c, \"RightClickContainer\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RightClickContainer","userId","loggedInUserId","addFriend","deleteFriend","children","setHandleContextMenu","_s","showMenu","setShowMenu","menuPosition","setMenuPosition","x","y","selectedUserId","setSelectedUserId","isFriend","setIsFriend","menuRef","REST","process","env","REACT_APP_RESTURL","handleContextMenu","event","id","String","preventDefault","pageX","pageY","res","fetch","data","json","state","err","console","error","handleClickOutside","current","contains","target","closeMenu","document","addEventListener","removeEventListener","handleDirectMessage","method","headers","body","JSON","stringify","userA","userB","ok","Error","chatroomId","alert","window","location","href","style","display","width","ref","position","top","left","background","border","padding","boxShadow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/component/RightClickContainer.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\n\r\nconst RightClickContainer = ({\r\n    userId,\r\n    loggedInUserId,\r\n    addFriend,\r\n    deleteFriend,\r\n    children,\r\n    setHandleContextMenu,\r\n}) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [isFriend, setIsFriend] = useState(null);\r\n    const menuRef = useRef(null);\r\n    const REST = process.env.REACT_APP_RESTURL;\r\n\r\n    // 우클릭 이벤트 핸들러\r\n    async function handleContextMenu(event, id) {\r\n        if (String(id) === String(loggedInUserId)) return;\r\n\r\n        event.preventDefault();\r\n        setSelectedUserId(id);\r\n        setMenuPosition({ x: event.pageX, y: event.pageY });\r\n\r\n        try {\r\n            const res = await fetch(`https://${REST}/api/isfriend?userId=${id}&myId=${loggedInUserId}`);\r\n            const data = await res.json();\r\n            setIsFriend(data && (data.state === true || data.state === 1));\r\n        } catch (err) {\r\n            console.error(\"친구 상태 확인 실패\", err);\r\n            setIsFriend(false);\r\n        }\r\n\r\n        setShowMenu(true);\r\n    }\r\n\r\n    // 함수 전달\r\n    useEffect(() => {\r\n        if (setHandleContextMenu) {\r\n            setHandleContextMenu(() => handleContextMenu);\r\n        }\r\n    }, [setHandleContextMenu]);\r\n\r\n    // 외부 클릭 시 닫기\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                closeMenu();\r\n            }\r\n        }\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    function closeMenu() {\r\n        setShowMenu(false);\r\n        setSelectedUserId(null);\r\n        setIsFriend(null);\r\n    }\r\n\r\n    const handleDirectMessage = async () => {\r\n        try {\r\n            const res = await fetch(\"http://192.168.0.89:9999/api/findchatroom\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    userA: loggedInUserId,\r\n                    userB: selectedUserId,\r\n                }),\r\n            });\r\n    \r\n            if (!res.ok) {\r\n                throw new Error(\"채팅방 요청 실패\");\r\n            }\r\n    \r\n            const data = await res.json();\r\n            const chatroomId = data.chatroomId;\r\n    \r\n            if (!chatroomId) {\r\n                alert(\"채팅방 ID를 찾을 수 없습니다.\");\r\n                return;\r\n            }\r\n    \r\n            window.location.href = `/channel/@me/${chatroomId}`;\r\n        } catch (err) {\r\n            console.error(\"❌ 채팅방 이동 실패:\", err);\r\n            alert(\"1:1 채팅을 시작할 수 없습니다.\");\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div style={{ display: \"inline-block\", width: \"100%\" }}>\r\n            {children}\r\n    \r\n            {showMenu && (\r\n                <div\r\n                    ref={menuRef}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: menuPosition.y,\r\n                        left: menuPosition.x,\r\n                        background: \"#fff\",\r\n                        border: \"1px solid #ccc\",\r\n                        padding: \"5px\",\r\n                        boxShadow: \"2px 2px 5px rgba(0,0,0,0.2)\",\r\n                    }}\r\n                >\r\n                    <button onClick={() => alert(\"정보보기\")}>정보보기</button>\r\n                    {isFriend ? (\r\n                        <>\r\n                            <button onClick={handleDirectMessage}>1:1 채팅</button>\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await deleteFriend(selectedUserId, loggedInUserId);\r\n                                    closeMenu();\r\n                                }}\r\n                            >\r\n                                친구 삭제\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <button\r\n                            onClick={() => {\r\n                                addFriend(selectedUserId);\r\n                                closeMenu();\r\n                            }}\r\n                        >\r\n                            친구 추가\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default RightClickContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}