{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\component\\\\RequestFriends.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getSubFromLoginToken() {\n  const token = localStorage.getItem(\"logintoken\");\n  if (!token) {\n    console.warn(\"로그인 토큰이 존재하지 않습니다.\");\n    return \"\";\n  }\n  try {\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"유효하지 않은 토큰 형식입니다.\");\n    }\n    const payload = parts[1];\n    const decodedPayload = JSON.parse(atob(payload));\n    return decodedPayload.sub || \"\";\n  } catch (error) {\n    console.error(\"토큰 파싱 중 오류 발생:\", error);\n    return \"\";\n  }\n}\nexport function RequestFriends() {\n  _s();\n  const REST = process.env.REACT_APP_RESTURL;\n  const [friendsData, setFriendsData] = useState(null); // 처음에는 `null` (아무것도 표시 X)\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false); // 버튼 클릭 중 상태\n\n  const fetchFriendsData = () => {\n    const sub = getSubFromLoginToken();\n    if (!sub) {\n      setError(\"토큰 정보가 없습니다.\");\n      return;\n    }\n    console.log(\"sub 값:\", sub);\n    setLoading(true);\n    setError(null);\n    const url = `https://${REST}/api/requestfriends`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sub\n      }) // JSON으로 sub 값을 전송\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`서버 응답 에러: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      setFriendsData(data.length > 0 ? data : []); // 데이터가 있으면 저장, 없으면 빈 배열\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"데이터 가져오기 실패:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  };\n  const handleFriendAction = (identifyCode, status) => {\n    const sub = getSubFromLoginToken();\n    if (!sub) {\n      setError(\"토큰 정보가 없습니다.\");\n      return;\n    }\n    setActionLoading(true); // 버튼 클릭 중 상태 설정\n\n    const url = `https://${REST}/api/updatefriend`;\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sub,\n        identifyCode,\n        status\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`서버 응답 에러: ${res.status}`);\n      }\n      return res.json();\n    }).then(() => {\n      setActionLoading(false);\n      fetchFriendsData(); // ✅ 요청 성공 후 친구 목록 갱신\n    }).catch(err => {\n      console.error(\"친구 요청 처리 실패:\", err);\n      setError(err.message);\n      setActionLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uCE5C\\uAD6C\\uC694\\uCCAD \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchFriendsData,\n      children: \"\\uCE5C\\uAD6C\\uC694\\uCCAD \\uBAA9\\uB85D \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC5D0\\uB7EC \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), friendsData !== null && (friendsData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friendsData.map((friend, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC2DD\\uBCC4\\uCF54\\uB4DC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), \" \", friend.identifyCode, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC544\\uC774\\uB514:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), \" \", friend.id, \" |\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uB2C9\\uB124\\uC784:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), \" \", friend.nickname, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFriendAction(friend.identifyCode, 1),\n          disabled: actionLoading,\n          children: actionLoading ? \"처리 중...\" : \"수락\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFriendAction(friend.identifyCode, -1),\n          disabled: actionLoading,\n          children: actionLoading ? \"처리 중...\" : \"거절\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uCE5C\\uAD6C \\uC694\\uCCAD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(RequestFriends, \"zEtxdsUSEHqQNf5pyzQatk1fiIE=\");\n_c = RequestFriends;\nvar _c;\n$RefreshReg$(_c, \"RequestFriends\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","getSubFromLoginToken","token","localStorage","getItem","console","warn","parts","split","length","Error","payload","decodedPayload","JSON","parse","atob","sub","error","RequestFriends","_s","REST","process","env","REACT_APP_RESTURL","friendsData","setFriendsData","loading","setLoading","setError","actionLoading","setActionLoading","fetchFriendsData","log","url","fetch","method","headers","body","stringify","then","res","ok","status","json","data","catch","err","message","handleFriendAction","identifyCode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","friend","index","id","nickname","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/scoop/scoop_front/src/component/RequestFriends.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction getSubFromLoginToken() {\r\n  const token = localStorage.getItem(\"logintoken\");\r\n  if (!token) {\r\n    console.warn(\"로그인 토큰이 존재하지 않습니다.\");\r\n    return \"\";\r\n  }\r\n\r\n  try {\r\n    const parts = token.split(\".\");\r\n    if (parts.length !== 3) {\r\n      throw new Error(\"유효하지 않은 토큰 형식입니다.\");\r\n    }\r\n    const payload = parts[1];\r\n    const decodedPayload = JSON.parse(atob(payload));\r\n    return decodedPayload.sub || \"\";\r\n  } catch (error) {\r\n    console.error(\"토큰 파싱 중 오류 발생:\", error);\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function RequestFriends() {\r\n  const REST = process.env.REACT_APP_RESTURL;\r\n\r\n  const [friendsData, setFriendsData] = useState(null); // 처음에는 `null` (아무것도 표시 X)\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [actionLoading, setActionLoading] = useState(false); // 버튼 클릭 중 상태\r\n\r\n  const fetchFriendsData = () => {\r\n    const sub = getSubFromLoginToken();\r\n    if (!sub) {\r\n      setError(\"토큰 정보가 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"sub 값:\", sub);\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    const url = `https://${REST}/api/requestfriends`;\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ sub }), // JSON으로 sub 값을 전송\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`서버 응답 에러: ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setFriendsData(data.length > 0 ? data : []); // 데이터가 있으면 저장, 없으면 빈 배열\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"데이터 가져오기 실패:\", err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFriendAction = (identifyCode, status) => {\r\n    const sub = getSubFromLoginToken();\r\n    if (!sub) {\r\n      setError(\"토큰 정보가 없습니다.\");\r\n      return;\r\n    }\r\n\r\n    setActionLoading(true); // 버튼 클릭 중 상태 설정\r\n\r\n    const url = `https://${REST}/api/updatefriend`;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ sub, identifyCode, status }),\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(`서버 응답 에러: ${res.status}`);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(() => {\r\n        setActionLoading(false);\r\n        fetchFriendsData(); // ✅ 요청 성공 후 친구 목록 갱신\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"친구 요청 처리 실패:\", err);\r\n        setError(err.message);\r\n        setActionLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"friends-container\">\r\n      <h3>친구요청 목록</h3>\r\n      <button onClick={fetchFriendsData}>친구요청 목록 가져오기</button>\r\n\r\n      {loading && <p>데이터 로딩 중...</p>}\r\n      {error && <p>에러 발생: {error}</p>}\r\n\r\n      {friendsData !== null && (\r\n        friendsData.length > 0 ? (\r\n          <ul>\r\n            {friendsData.map((friend, index) => (\r\n              <li key={index}>\r\n                <strong>식별코드:</strong> {friend.identifyCode} |{\" \"}\r\n                <strong>아이디:</strong> {friend.id} |{\" \"}\r\n                <strong>닉네임:</strong> {friend.nickname}\r\n                \r\n                {/* 수락 및 거절 버튼 */}\r\n                <button\r\n                  onClick={() => handleFriendAction(friend.identifyCode, 1)}\r\n                  disabled={actionLoading}\r\n                >\r\n                  {actionLoading ? \"처리 중...\" : \"수락\"}\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => handleFriendAction(friend.identifyCode, -1)}\r\n                  disabled={actionLoading}\r\n                >\r\n                  {actionLoading ? \"처리 중...\" : \"거절\"}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>친구 요청이 없습니다.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}