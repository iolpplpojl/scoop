{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\component\\\\FriendsContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\"; // 로그인 토큰에서 sub값 추출 기능\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FriendsContainer() {\n  _s();\n  const REST = process.env.REACT_APP_RESTURL;\n  const [friendsData, setFriendsData] = useState(null);\n  const [loading, setLoading] = useState(true); // 초기 로딩 상태 true\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFriendsData = () => {\n      const sub = getSubFromLoginToken();\n      if (!sub) {\n        setError(\"토큰 정보가 없습니다.\");\n        setLoading(false);\n        return;\n      }\n      console.log(\"sub 값:\", sub);\n      const url = `https://${REST}/api/getfriends`;\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sub\n        })\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error(`서버 응답 에러: ${res.status}`);\n        }\n        return res.json();\n      }).then(data => {\n        setFriendsData(data.length > 0 ? data : []);\n        setLoading(false);\n      }).catch(err => {\n        console.error(\"데이터 가져오기 실패:\", err);\n        setError(err.message);\n        setLoading(false);\n      });\n    };\n    fetchFriendsData();\n  }, []); // 빈 배열 []을 넣으면 컴포넌트가 처음 렌더링될 때만 실행됨.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uCE5C\\uAD6C \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC5D0\\uB7EC \\uBC1C\\uC0DD: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), friendsData !== null && (friendsData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: friendsData.map((friend, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC2DD\\uBCC4\\uCF54\\uB4DC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), \" \", friend.identifyCode, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC544\\uC774\\uB514:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), \" \", friend.id, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uB2C9\\uB124\\uC784:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), \" \", friend.nickname]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uCE5C\\uAD6C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(FriendsContainer, \"X5KvKzZzb3BdTNz3b2Y55Fmayeg=\");\n_c = FriendsContainer;\nvar _c;\n$RefreshReg$(_c, \"FriendsContainer\");","map":{"version":3,"names":["React","useState","useEffect","getSubFromLoginToken","jsxDEV","_jsxDEV","FriendsContainer","_s","REST","process","env","REACT_APP_RESTURL","friendsData","setFriendsData","loading","setLoading","error","setError","fetchFriendsData","sub","console","log","url","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","status","json","data","length","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","friend","index","identifyCode","id","nickname","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/component/FriendsContainer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\"; // 로그인 토큰에서 sub값 추출 기능\r\n\r\nexport function FriendsContainer() {\r\n  const REST = process.env.REACT_APP_RESTURL;\r\n\r\n  const [friendsData, setFriendsData] = useState(null);\r\n  const [loading, setLoading] = useState(true); // 초기 로딩 상태 true\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFriendsData = () => {\r\n      const sub = getSubFromLoginToken();\r\n      if (!sub) {\r\n        setError(\"토큰 정보가 없습니다.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log(\"sub 값:\", sub);\r\n\r\n      const url = `https://${REST}/api/getfriends`;\r\n\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ sub }),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) {\r\n            throw new Error(`서버 응답 에러: ${res.status}`);\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((data) => {\r\n          setFriendsData(data.length > 0 ? data : []);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"데이터 가져오기 실패:\", err);\r\n          setError(err.message);\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetchFriendsData();\r\n  }, []); // 빈 배열 []을 넣으면 컴포넌트가 처음 렌더링될 때만 실행됨.\r\n\r\n  return (\r\n    <div className=\"friends-container\">\r\n      <h3>친구 목록</h3>\r\n      \r\n      {loading && <p>데이터 로딩 중...</p>}\r\n      {error && <p>에러 발생: {error}</p>}\r\n\r\n      {friendsData !== null && (\r\n        friendsData.length > 0 ? (\r\n          <ul>\r\n            {friendsData.map((friend, index) => (\r\n              <li key={index}>\r\n                <strong>식별코드:</strong> {friend.identifyCode} | \r\n                <strong>아이디:</strong> {friend.id} | \r\n                <strong>닉네임:</strong> {friend.nickname}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>친구가 없습니다.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}