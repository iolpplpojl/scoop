{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\Connector.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { Children, createContext, useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketContext = /*#__PURE__*/createContext(null);\nconst isLoggedin = false;\nexport function Connector({\n  children\n}) {\n  _s();\n  const [isConn, setIsConn] = useState(false);\n  const [token, setToken] = useState(null);\n  const nav = useNavigate();\n  useEffect(() => {\n    if (token === null) {\n      if (localStorage.getItem(\"token\") == null) {\n        alert(\"로그인을 하시오.\");\n        nav(\"/login\");\n      } else {\n        nav(\"/\");\n      }\n    }\n  }, [token]);\n  if (!isConn) {\n    Connect();\n  }\n  useEffect(() => {\n    console.log(\"Conneting...\" + Math.random());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: isLoggedin,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Connector, \"IKg18NdzXxOwJTyLMUCnPWs0Tm8=\", false, function () {\n  return [useNavigate];\n});\n_c = Connector;\nfunction Connect() {\n  // websocket 연결\n}\n_c2 = Connect;\nexport function CheckLogin() {\n  _s2();\n  // 페이지마다 로그인 체크 후 false면  /login nav\n  const nav = useNavigate();\n  const login = isLoggedin;\n  console.log(login + \" == Login\");\n}\n_s2(CheckLogin, \"1lJpW1ZyBjjoZdLGgRu75VwkrM8=\", false, function () {\n  return [useNavigate];\n});\n_c3 = CheckLogin;\nexport function useWebSocket() {\n  _s3();\n  return useContext(WebSocketContext);\n}\n_s3(useWebSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Connector\");\n$RefreshReg$(_c2, \"Connect\");\n$RefreshReg$(_c3, \"CheckLogin\");","map":{"version":3,"names":["Children","createContext","useContext","useEffect","useState","useNavigate","useSearchParams","jsxDEV","_jsxDEV","WebSocketContext","isLoggedin","Connector","children","_s","isConn","setIsConn","token","setToken","nav","localStorage","getItem","alert","Connect","console","log","Math","random","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","CheckLogin","_s2","login","_c3","useWebSocket","_s3","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/scoop/scoop_front/src/Connector.jsx"],"sourcesContent":["import { Children, createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst WebSocketContext = createContext(null);\r\nconst isLoggedin = false;\r\n\r\nexport function Connector({children}){\r\n    const [isConn,setIsConn] = useState(false);\r\n    const [token, setToken] = useState(null);\r\n    const nav = useNavigate();\r\n\r\n\r\n    useEffect(() =>{\r\n        if(token === null){\r\n            if(localStorage.getItem(\"token\") == null){\r\n                alert(\"로그인을 하시오.\");\r\n                nav(\"/login\");\r\n            }\r\n            else{\r\n                nav(\"/\")\r\n            }\r\n        }\r\n    },[token]);\r\n\r\n    if(!isConn){\r\n        Connect();\r\n    }\r\n    useEffect(()=>{\r\n        console.log(\"Conneting...\" + Math.random());\r\n    },[])\r\n    return (\r\n        <WebSocketContext.Provider value={isLoggedin}>\r\n                {children}\r\n        </WebSocketContext.Provider>\r\n      )\r\n}\r\nfunction Connect(){\r\n // websocket 연결\r\n}\r\nexport function CheckLogin()\r\n{\r\n // 페이지마다 로그인 체크 후 false면  /login nav\r\n    const nav = useNavigate();\r\n    const login = isLoggedin;\r\n    console.log(login + \" == Login\");\r\n}\r\n\r\nexport function useWebSocket() {\r\n\r\n    return useContext(WebSocketContext);\r\n}"],"mappings":";;;;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAChF,SAASC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,gBAAgB,gBAAGR,aAAa,CAAC,IAAI,CAAC;AAC5C,MAAMS,UAAU,GAAG,KAAK;AAExB,OAAO,SAASC,SAASA,CAAC;EAACC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,GAAG,GAAGb,WAAW,CAAC,CAAC;EAGzBF,SAAS,CAAC,MAAK;IACX,IAAGa,KAAK,KAAK,IAAI,EAAC;MACd,IAAGG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAC;QACrCC,KAAK,CAAC,WAAW,CAAC;QAClBH,GAAG,CAAC,QAAQ,CAAC;MACjB,CAAC,MACG;QACAA,GAAG,CAAC,GAAG,CAAC;MACZ;IACJ;EACJ,CAAC,EAAC,CAACF,KAAK,CAAC,CAAC;EAEV,IAAG,CAACF,MAAM,EAAC;IACPQ,OAAO,CAAC,CAAC;EACb;EACAnB,SAAS,CAAC,MAAI;IACVoB,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC/C,CAAC,EAAC,EAAE,CAAC;EACL,oBACIlB,OAAA,CAACC,gBAAgB,CAACkB,QAAQ;IAACC,KAAK,EAAElB,UAAW;IAAAE,QAAA,EACpCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEpC;AAACnB,EAAA,CA7BeF,SAAS;EAAA,QAGTN,WAAW;AAAA;AAAA4B,EAAA,GAHXtB,SAAS;AA8BzB,SAASW,OAAOA,CAAA,EAAE;EACjB;AAAA;AACAY,GAAA,GAFQZ,OAAO;AAGhB,OAAO,SAASa,UAAUA,CAAA,EAC1B;EAAAC,GAAA;EACC;EACG,MAAMlB,GAAG,GAAGb,WAAW,CAAC,CAAC;EACzB,MAAMgC,KAAK,GAAG3B,UAAU;EACxBa,OAAO,CAACC,GAAG,CAACa,KAAK,GAAG,WAAW,CAAC;AACpC;AAACD,GAAA,CANeD,UAAU;EAAA,QAGV9B,WAAW;AAAA;AAAAiC,GAAA,GAHXH,UAAU;AAQ1B,OAAO,SAASI,YAAYA,CAAA,EAAG;EAAAC,GAAA;EAE3B,OAAOtC,UAAU,CAACO,gBAAgB,CAAC;AACvC;AAAC+B,GAAA,CAHeD,YAAY;AAAA,IAAAN,EAAA,EAAAC,GAAA,EAAAI,GAAA;AAAAG,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}