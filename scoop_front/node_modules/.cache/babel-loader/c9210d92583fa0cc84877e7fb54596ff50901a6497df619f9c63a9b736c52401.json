{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\scoop\\\\scoop_front\\\\src\\\\find-pw.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FindPw() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const REST = process.env.REACT_APP_RESTURL; // API 주소 (환경 변수)\n\n  // 폼 제출 시 실행\n  const handleSubmit = e => {\n    e.preventDefault(); // 기본 동작 방지\n    doFindPw(); // POST 요청 실행\n  };\n  function doFindPw() {\n    console.log(email);\n    axios(`https://${REST}/api/find-password`, {\n      method: \"POST\",\n      data: JSON.stringify({\n        email: email\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      alert(\"이메일로 비밀번호 재설정 주소를 보냈습니다\");\n      navigate(\"/login\");\n    }).catch(err => {\n      var _err$response;\n      console.error(\"❌ 비밀번호 찾기 오류:\", err);\n\n      // ✅ 오류 메시지를 안전하게 가져오기\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"서버와의 연결에 문제가 발생했습니다.\";\n      alert(errorMessage); // 사용자에게 알림\n      setMessage(errorMessage); // 화면에 오류 메시지 표시\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(FindPw, \"MwF1x+sWsmKIcU7zYHAaLGCexZU=\", false, function () {\n  return [useNavigate];\n});\n_c = FindPw;\nvar _c;\n$RefreshReg$(_c, \"FindPw\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","FindPw","_s","email","setEmail","message","setMessage","navigate","REST","process","env","REACT_APP_RESTURL","handleSubmit","e","preventDefault","doFindPw","console","log","method","data","JSON","stringify","headers","then","res","alert","catch","err","_err$response","error","errorMessage","response","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/scoop/scoop_front/src/find-pw.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport function FindPw() {\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const REST = process.env.REACT_APP_RESTURL; // API 주소 (환경 변수)\r\n    \r\n    // 폼 제출 시 실행\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // 기본 동작 방지\r\n        doFindPw(); // POST 요청 실행\r\n    };\r\n    function doFindPw(){\r\n        console.log(email);\r\n        axios(`https://${REST}/api/find-password`,{\r\n            method:\"POST\",\r\n            data: JSON.stringify({\r\n                email: email\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n        .then((res) => {\r\n            console.log(res);\r\n            alert(\"이메일로 비밀번호 재설정 주소를 보냈습니다\");\r\n            navigate(\"/login\");\r\n        }).catch((err) => {\r\n            console.error(\"❌ 비밀번호 찾기 오류:\", err);\r\n\r\n        // ✅ 오류 메시지를 안전하게 가져오기\r\n        const errorMessage = err.response?.data || \"서버와의 연결에 문제가 발생했습니다.\";\r\n\r\n        alert(errorMessage); // 사용자에게 알림\r\n        setMessage(errorMessage); // 화면에 오류 메시지 표시\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id='Signup'>\r\n        <div className=\"signup-container\">\r\n            <h2>비밀번호 찾기</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">이메일</label>\r\n                    <input type=\"email\"  id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-btn\">비밀번호 찾기</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}