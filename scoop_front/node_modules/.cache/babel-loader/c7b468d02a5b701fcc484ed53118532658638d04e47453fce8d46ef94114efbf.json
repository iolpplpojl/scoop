{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\scoop\\\\scoop_front\\\\src\\\\find-pw.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FindPw() {\n  _s();\n  const [id, setId] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const REST = process.env.REACT_APP_RESTURL;\n  const handleSubmit = e => {\n    e.preventDefault();\n    doFindPw();\n  };\n  function doFindPw() {\n    console.log(email);\n    axios.post(`https://${REST}/api/find-password`, {\n      email: email\n    },\n    // 객체 그대로 전달\n    {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      alert(\"이메일로 비밀번호 재설정 주소를 보냈습니다\");\n      navigate(\"/login\");\n    }).catch(err => {\n      console.error(\"❌ 비밀번호 찾기 오류:\", err.response);\n      alert(\"error\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(FindPw, \"NICspzBSMmmxx+a8pMz4hiKElEI=\", false, function () {\n  return [useNavigate];\n});\n_c = FindPw;\nvar _c;\n$RefreshReg$(_c, \"FindPw\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","FindPw","_s","id","setId","email","setEmail","message","setMessage","navigate","REST","process","env","REACT_APP_RESTURL","handleSubmit","e","preventDefault","doFindPw","console","log","post","headers","then","res","alert","catch","err","error","response","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/GitHub/scoop/scoop_front/src/find-pw.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport function FindPw() {\r\n    const [id,setId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const REST = process.env.REACT_APP_RESTURL;\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        doFindPw(); \r\n    };\r\n    function doFindPw() {\r\n        console.log(email);\r\n        axios.post(`https://${REST}/api/find-password`, \r\n            { email: email }, // 객체 그대로 전달\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )\r\n        .then((res) => {\r\n            console.log(res);\r\n            alert(\"이메일로 비밀번호 재설정 주소를 보냈습니다\");\r\n            navigate(\"/login\");\r\n        })\r\n        .catch((err) => {\r\n            console.error(\"❌ 비밀번호 찾기 오류:\", err.response);\r\n            alert(\"error\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id='Signup'>\r\n        <div className=\"signup-container\">\r\n            <h2>비밀번호 찾기</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-group\">\r\n                    <label htmlFor=\"email\">이메일</label>\r\n                    <input type=\"email\"  id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-btn\">비밀번호 찾기</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}