{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\scoop\\\\SCOOP_FRONT\\\\src\\\\tool\\\\AddChannel.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './AddChannel.css';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddChannel(props) {\n  _s();\n  const [id, setId] = useState(\"\");\n  const REST = process.env.REACT_APP_RESTURL;\n  const nav = useNavigate();\n  function handle() {\n    console.log(\"chat\");\n    axios(`https://${REST}/api/addChatrooms`, {\n      method: \"post\",\n      params: {\n        server_id: props.server,\n        name: id\n      },\n      withCredentials: true // 쿠키 및 인증 헤더를 포함하여 요청\n    }).then(res => {\n      console.log(res);\n      props.getServer(props.server);\n      props.isPopupOpen(false);\n      nav(`channel/${props.server}/${res.data}`);\n      return;\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n    console.log(id + props.server);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddChannel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC11C\\uBC84\\uBA85 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: id,\n        onChange: e => setId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handle(),\n      disabled: id === \"\" ? true : false,\n      children: \"\\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(AddChannel, \"mpyqaTG1oJqZGLBY9+Tagkfpp38=\", false, function () {\n  return [useNavigate];\n});\n_c = AddChannel;\nvar _c;\n$RefreshReg$(_c, \"AddChannel\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","AddChannel","props","_s","id","setId","REST","process","env","REACT_APP_RESTURL","nav","handle","console","log","method","params","server_id","server","name","withCredentials","then","res","getServer","isPopupOpen","data","catch","err","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/scoop/SCOOP_FRONT/src/tool/AddChannel.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport './AddChannel.css'\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport function AddChannel(props){\r\n    const [id, setId] = useState(\"\");\r\n    const REST = process.env.REACT_APP_RESTURL;\r\n    const nav = useNavigate();\r\n\r\n    function handle(){\r\n        console.log(\"chat\");\r\n        axios(`https://${REST}/api/addChatrooms`, {\r\n            method : \"post\",\r\n            params : {\r\n                server_id: props.server,\r\n                name: id\r\n            },\r\n            withCredentials: true  // 쿠키 및 인증 헤더를 포함하여 요청\r\n        }).then((res) => { \r\n                console.log(res);\r\n                props.getServer(props.server);\r\n                props.isPopupOpen(false);\r\n                nav(`channel/${props.server}/${res.data}`)\r\n\r\n                return;\r\n        }).catch((err) => { \r\n                console.log(err);\r\n                return;\r\n        });\r\n          \r\n        console.log(id + props.server);\r\n    }\r\n    return(\r\n        <div className=\"AddChannel\">\r\n            <div>\r\n                서버명 : <input value={id} onChange={(e) => setId(e.target.value)}></input>\r\n            </div>\r\n                <button onClick={() => handle()} disabled={id===\"\"? true : false}>만들기</button>\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,OAAO,SAASC,UAAUA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAC7B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAMU,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC1C,MAAMC,GAAG,GAAGZ,WAAW,CAAC,CAAC;EAEzB,SAASa,MAAMA,CAAA,EAAE;IACbC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBhB,KAAK,CAAC,WAAWS,IAAI,mBAAmB,EAAE;MACtCQ,MAAM,EAAG,MAAM;MACfC,MAAM,EAAG;QACLC,SAAS,EAAEd,KAAK,CAACe,MAAM;QACvBC,IAAI,EAAEd;MACV,CAAC;MACDe,eAAe,EAAE,IAAI,CAAE;IAC3B,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACTT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;MAChBnB,KAAK,CAACoB,SAAS,CAACpB,KAAK,CAACe,MAAM,CAAC;MAC7Bf,KAAK,CAACqB,WAAW,CAAC,KAAK,CAAC;MACxBb,GAAG,CAAC,WAAWR,KAAK,CAACe,MAAM,IAAII,GAAG,CAACG,IAAI,EAAE,CAAC;MAE1C;IACR,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MACVd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;MAChB;IACR,CAAC,CAAC;IAEFd,OAAO,CAACC,GAAG,CAACT,EAAE,GAAGF,KAAK,CAACe,MAAM,CAAC;EAClC;EACA,oBACIjB,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvB5B,OAAA;MAAA4B,QAAA,GAAK,uBACK,eAAA5B,OAAA;QAAO6B,KAAK,EAAEzB,EAAG;QAAC0B,QAAQ,EAAGC,CAAC,IAAK1B,KAAK,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACFpC,OAAA;MAAQqC,OAAO,EAAEA,CAAA,KAAM1B,MAAM,CAAC,CAAE;MAAC2B,QAAQ,EAAElC,EAAE,KAAG,EAAE,GAAE,IAAI,GAAG,KAAM;MAAAwB,QAAA,EAAC;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAGd;AAACjC,EAAA,CArCeF,UAAU;EAAA,QAGVH,WAAW;AAAA;AAAAyC,EAAA,GAHXtC,UAAU;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}