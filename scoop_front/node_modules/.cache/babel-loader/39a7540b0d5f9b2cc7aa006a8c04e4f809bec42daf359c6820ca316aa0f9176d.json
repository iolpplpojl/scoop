{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\project\\\\scoop2\\\\scoop_front\\\\src\\\\objects\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Chat(props) {\n  _s();\n  const [showMenu, setShowMenu] = useState(false);\n  const [isFriend, setIsFriend] = useState(false);\n  const menuRef = useRef(null);\n  const userId = props.userId; // 채팅창 유저의 identifyCode\n  const loggedInUserId = getSubFromLoginToken(); // 로그인한 사용자의 identifyCode\n\n  // 친구 여부 확인 api 호출\n  useEffect(() => {\n    if (userId && userId !== loggedInUserId) {\n      fetch(`http://192.168.0.89:9999/api/isfriend?userId=${userId}&myId=${loggedInUserId}`).then(response => response.json()).then(data => setIsFriend(data)).catch(error => console.error(\"친구 여부 확인 오류:\", error));\n    }\n  }, [userId, loggedInUserId]);\n  function handleContextMenu(event) {\n    event.preventDefault(); // 기본적으로 기능하는 우클릭 메뉴 방지\n\n    //자기 자신 체크\n    if (String(userId) === String(loggedInUserId)) {\n      return;\n    }\n    setMenuPosition({\n      x: event.pageX,\n      y: event.pageY\n    });\n    setShowMenu(true);\n  }\n  function closeMenu() {\n    setShowMenu(false);\n  }\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        closeMenu();\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onContextMenu: handleContextMenu,\n      className: \"chatmessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/512/6522/6522516.png\",\n        width: 50,\n        height: 50,\n        alt: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \" : \", props.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: menuRef,\n      className: \"context-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"정보보기\"),\n        children: \"\\uC815\\uBCF4\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), isFriend ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"1:1 채팅하기\"),\n          children: \"1:1 \\uCC44\\uD305\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => alert(\"친구 삭제\"),\n          children: \"\\uCE5C\\uAD6C \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(`친구 추가: ${props.userId}`),\n        children: \"\\uCE5C\\uAD6C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"NyZxJSs92tQjFVJzwvSaBqLuAfs=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useRef","useEffect","getSubFromLoginToken","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","props","_s","showMenu","setShowMenu","isFriend","setIsFriend","menuRef","userId","loggedInUserId","fetch","then","response","json","data","catch","error","console","handleContextMenu","event","preventDefault","String","setMenuPosition","x","pageX","y","pageY","closeMenu","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","children","onContextMenu","className","src","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","text","date","ref","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/project/scoop2/scoop_front/src/objects/chat.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { getSubFromLoginToken } from \"../util/GetSubByLogintoken\";\r\n\r\nexport function Chat(props) {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [isFriend, setIsFriend] = useState(false);\r\n    const menuRef = useRef(null);\r\n\r\n    const userId = props.userId; // 채팅창 유저의 identifyCode\r\n    const loggedInUserId = getSubFromLoginToken(); // 로그인한 사용자의 identifyCode\r\n\r\n    // 친구 여부 확인 api 호출\r\n    useEffect(() => {\r\n        if (userId && userId !== loggedInUserId) {\r\n            fetch(`http://192.168.0.89:9999/api/isfriend?userId=${userId}&myId=${loggedInUserId}`)\r\n                .then(response => response.json())\r\n                .then(data => setIsFriend(data))\r\n                .catch(error => console.error(\"친구 여부 확인 오류:\", error));\r\n        }\r\n    }, [userId, loggedInUserId]);\r\n\r\n    function handleContextMenu(event) {\r\n        event.preventDefault(); // 기본적으로 기능하는 우클릭 메뉴 방지\r\n\r\n        //자기 자신 체크\r\n        if (String(userId) === String(loggedInUserId)) {\r\n            return;\r\n        }\r\n\r\n        setMenuPosition({ x: event.pageX, y: event.pageY });\r\n        setShowMenu(true);\r\n    }\r\n\r\n    function closeMenu() {\r\n        setShowMenu(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                closeMenu();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <li onContextMenu={handleContextMenu} className=\"chatmessage\">\r\n                <img src=\"https://cdn-icons-png.flaticon.com/512/6522/6522516.png\" width={50} height={50} alt=\"Profile\" />\r\n                <b>{props.name}</b> : {props.text} <span className=\"date\">{props.date}</span>\r\n            </li>\r\n\r\n            {showMenu && (\r\n                <div ref={menuRef} className=\"context-menu\">\r\n                    <button onClick={() => alert(\"정보보기\")}>정보보기</button>\r\n                    {isFriend ? (\r\n                        <>\r\n                            <button onClick={() => alert(\"1:1 채팅하기\")}>1:1 채팅</button>\r\n                            <button onClick={() => alert(\"친구 삭제\")}>친구 삭제</button>\r\n                        </>\r\n                    ) : (\r\n                        <button onClick={() => alert(`친구 추가: ${props.userId}`)}>친구 추가</button>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}